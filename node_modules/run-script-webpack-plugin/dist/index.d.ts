import { Compiler, WebpackPluginInstance } from 'webpack';
export declare type ProcessKillSignal = 'SIGHUP' | 'SIGINT' | 'SIGQUIT' | 'SIGILL' | 'SIGABRT' | 'SIGFPE' | 'SIGKILL' | 'SIGSEGV' | 'SIGPIPE' | 'SIGALRM' | 'SIGTERM' | 'SIGUSR1' | 'SIGUSR2' | 'SIGCHLD' | 'SIGCONT' | 'SIGSTOP' | 'SIGTSTP' | 'SIGTTIN' | 'SIGTTOU' | 'SIGBUS' | 'SIGPOLL' | 'SIGPROF' | 'SIGSYS' | 'SIGTRAP' | 'SIGURG' | 'SIGVTALRM' | 'SIGXCPU' | 'SIGXFSZ' | 'SIGIOT' | 'SIGEMT' | 'SIGSTKFLT' | 'SIGIO' | 'SIGCLD' | 'SIGPWR' | 'SIGINFO' | 'SIGLOST' | 'SIGWINCH' | 'SIGUNUSED';
export declare type RunScriptWebpackPluginOptions = {
    name?: string;
    nodeArgs: string[];
    args: string[];
    signal: boolean | ProcessKillSignal;
    keyboard: boolean;
    cwd?: string;
    restartable?: boolean;
};
declare class RunScriptWebpackPlugin implements WebpackPluginInstance {
    private readonly options;
    private worker?;
    private _entrypoint?;
    constructor(options?: Partial<RunScriptWebpackPluginOptions>);
    private _enableRestarting;
    private afterEmit;
    apply: (compiler: Compiler) => void;
    private startServer;
    private _startServer;
}
export { RunScriptWebpackPlugin };
